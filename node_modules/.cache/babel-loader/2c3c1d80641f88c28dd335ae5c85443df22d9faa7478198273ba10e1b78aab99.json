{"ast":null,"code":"var _jsxFileName = \"/Users/rahdeshm/Desktop/App/ReactMeals/src/Store/Cart-Provider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  console.log(action.item, state);\n  const {\n    items,\n    totalAmount\n  } = state;\n  if (action.type === 'ADD') {\n    const existingCartItem = items.find(product => product.id === action.item.id);\n    console.log(existingCartItem, 'hi');\n    if (existingCartItem) {\n      const updatedArr = state.items.map(item => {\n        return item.id === existingCartItem.id ? {\n          ...action.item,\n          amount: action.item.amount + 1\n        } : item;\n      });\n      console.log(updatedArr);\n    }\n    console.log(action.item, state);\n    const updatedItems = [...state.items, action.item];\n    const updatedTotalItems = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalItems\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"2SyrzIf5h4zAVB5yWzJ1q/dSUlI=\");\n_c = CartProvider;\nexport default CartProvider;\n\n// import { createContext, useState, useReducer } from 'react';\n\n// import { createAction } from '../utils/reducer/reducer.utils';\n\n// const addCartItem = (cartItems, productToAdd) => {\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === productToAdd.id\n//   );\n\n//   if (existingCartItem) {\n//     return cartItems.map((cartItem) =>\n//       cartItem.id === productToAdd.id\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n\n//   return [...cartItems, { ...productToAdd, quantity: 1 }];\n// };\n\n// const removeCartItem = (cartItems, cartItemToRemove) => {\n//   // find the cart item to remove\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === cartItemToRemove.id\n//   );\n\n//   // check if quantity is equal to 1, if it is remove that item from the cart\n//   if (existingCartItem.quantity === 1) {\n//     return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n//   }\n\n//   // return back cartitems with matching cart item with reduced quantity\n//   return cartItems.map((cartItem) =>\n//     cartItem.id === cartItemToRemove.id\n//       ? { ...cartItem, quantity: cartItem.quantity - 1 }\n//       : cartItem\n//   );\n// };\n\n// const CART_ACTION_TYPES = {\n//   SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n//   SET_CART_ITEMS: 'SET_CART_ITEMS',\n//   SET_CART_COUNT: 'SET_CART_COUNT',\n//   SET_CART_TOTAL: 'SET_CART_TOTAL',\n// };\n\n// const INITIAL_STATE = {\n//   isCartOpen: false,\n//   cartItems: [],\n//   cartCount: 0,\n//   cartTotal: 0,\n// };\n\n// const cartReducer = (state, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case CART_ACTION_TYPES.SET_CART_ITEMS:\n//       return {\n//         ...state,\n//         ...payload,\n//       };\n//     default:\n//       throw new Error(`Unhandled type ${type} in cartReducer`);\n//   }\n// };\n\n// const clearCartItem = (cartItems, cartItemToClear) =>\n//   cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\n// export const CartContext = createContext({\n//   isCartOpen: false,\n//   setIsCartOpen: () => {},\n//   cartItems: [],\n//   addItemToCart: () => {},\n//   removeItemFromCart: () => {},\n//   clearItemFromCart: () => {},\n//   cartCount: 0,\n//   cartTotal: 0,\n// });\n\n// export const CartProvider = ({ children }) => {\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n\n//   const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n//     cartReducer,\n//     INITIAL_STATE\n//   );\n\n//   const updateCartItemsReducer = (cartItems) => {\n//     const newCartCount = cartItems.reduce(\n//       (total, cartItem) => total + cartItem.quantity,\n//       0\n//     );\n\n//   const newCartTotal = cartItems.reduce(\n//       (total, cartItem) => total + cartItem.quantity * cartItem.price,\n//       0\n//     );\n\n//   const payload = {\n//       cartItems,\n//       cartCount: newCartCount,\n//       cartTotal: newCartTotal,\n//    };\n\n//     dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n//   };\n\n//   const addItemToCart = (productToAdd) => {\n//     const newCartItems = addCartItem(cartItems, productToAdd);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const removeItemToCart = (cartItemToRemove) => {\n//     const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const clearItemFromCart = (cartItemToClear) => {\n//     const newCartItems = clearCartItem(cartItems, cartItemToClear);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const value = {\n//     isCartOpen,\n//     setIsCartOpen,\n//     addItemToCart,\n//     removeItemToCart,\n//     clearItemFromCart,\n//     cartItems,\n//     cartCount,\n//     cartTotal,\n//   };\n\n//   return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n// };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","console","log","item","type","existingCartItem","find","product","id","updatedArr","map","amount","updatedItems","updatedTotalItems","price","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahdeshm/Desktop/App/ReactMeals/src/Store/Cart-Provider.jsx"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState={\n    items:[],\n    totalAmount:0\n}\n\nconst cartReducer=(state,action)=>{\n    console.log(action.item,state);\n    const {items,totalAmount}=state;\n      if(action.type==='ADD'){\n      const existingCartItem=items.find((product)=> product.id===action.item.id\n        );\n       console.log(existingCartItem,'hi');\n\n        if(existingCartItem){\n         const updatedArr= state.items.map((item)=>{\n            return (\n                item.id===existingCartItem.id?{...action.item,amount:action.item.amount+1}:item\n            )\n           })\n           console.log(updatedArr);\n        }\n        console.log(action.item,state);\n        const updatedItems=[...state.items,action.item];\n        const updatedTotalItems=state.totalAmount+action.item.price * action.item.amount;\n        return{\n            items:updatedItems,\n            totalAmount:updatedTotalItems\n        }   \n    }\n    return defaultCartState\n}\n\nconst CartProvider=props=>{\n    const[cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartState);\n    const addItemToCartHandler=item=>{\n        dispatchCartAction({type:'ADD',item:item});\n    };\n    const removeItemFromCartHandler=id=>{\n        dispatchCartAction({type:'REMOVE',id:id})\n    };\n    const cartContext={\n        items:cartState.items,\n        totalAmount:cartState.totalAmount,\n        addItem:addItemToCartHandler,\n        removeItem:removeItemFromCartHandler\n    }\n    return <CartContext.Provider value={cartContext}>\n         {props.children}\n    </CartContext.Provider>\n}\n\nexport default CartProvider\n\n\n\n// import { createContext, useState, useReducer } from 'react';\n\n// import { createAction } from '../utils/reducer/reducer.utils';\n\n// const addCartItem = (cartItems, productToAdd) => {\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === productToAdd.id\n//   );\n\n//   if (existingCartItem) {\n//     return cartItems.map((cartItem) =>\n//       cartItem.id === productToAdd.id\n//         ? { ...cartItem, quantity: cartItem.quantity + 1 }\n//         : cartItem\n//     );\n//   }\n\n//   return [...cartItems, { ...productToAdd, quantity: 1 }];\n// };\n\n// const removeCartItem = (cartItems, cartItemToRemove) => {\n//   // find the cart item to remove\n//   const existingCartItem = cartItems.find(\n//     (cartItem) => cartItem.id === cartItemToRemove.id\n//   );\n\n//   // check if quantity is equal to 1, if it is remove that item from the cart\n//   if (existingCartItem.quantity === 1) {\n//     return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n//   }\n\n//   // return back cartitems with matching cart item with reduced quantity\n//   return cartItems.map((cartItem) =>\n//     cartItem.id === cartItemToRemove.id\n//       ? { ...cartItem, quantity: cartItem.quantity - 1 }\n//       : cartItem\n//   );\n// };\n\n// const CART_ACTION_TYPES = {\n//   SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n//   SET_CART_ITEMS: 'SET_CART_ITEMS',\n//   SET_CART_COUNT: 'SET_CART_COUNT',\n//   SET_CART_TOTAL: 'SET_CART_TOTAL',\n// };\n\n// const INITIAL_STATE = {\n//   isCartOpen: false,\n//   cartItems: [],\n//   cartCount: 0,\n//   cartTotal: 0,\n// };\n\n// const cartReducer = (state, action) => {\n//   const { type, payload } = action;\n\n//   switch (type) {\n//     case CART_ACTION_TYPES.SET_CART_ITEMS:\n//       return {\n//         ...state,\n//         ...payload,\n//       };\n//     default:\n//       throw new Error(`Unhandled type ${type} in cartReducer`);\n//   }\n// };\n\n// const clearCartItem = (cartItems, cartItemToClear) =>\n//   cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\n// export const CartContext = createContext({\n//   isCartOpen: false,\n//   setIsCartOpen: () => {},\n//   cartItems: [],\n//   addItemToCart: () => {},\n//   removeItemFromCart: () => {},\n//   clearItemFromCart: () => {},\n//   cartCount: 0,\n//   cartTotal: 0,\n// });\n\n// export const CartProvider = ({ children }) => {\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n\n//   const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n//     cartReducer,\n//     INITIAL_STATE\n//   );\n\n//   const updateCartItemsReducer = (cartItems) => {\n//     const newCartCount = cartItems.reduce(\n//       (total, cartItem) => total + cartItem.quantity,\n//       0\n//     );\n\n//   const newCartTotal = cartItems.reduce(\n//       (total, cartItem) => total + cartItem.quantity * cartItem.price,\n//       0\n//     );\n\n//   const payload = {\n//       cartItems,\n//       cartCount: newCartCount,\n//       cartTotal: newCartTotal,\n//    };\n\n//     dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n//   };\n\n//   const addItemToCart = (productToAdd) => {\n//     const newCartItems = addCartItem(cartItems, productToAdd);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const removeItemToCart = (cartItemToRemove) => {\n//     const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const clearItemFromCart = (cartItemToClear) => {\n//     const newCartItems = clearCartItem(cartItems, cartItemToClear);\n//     updateCartItemsReducer(newCartItems);\n//   };\n\n//   const value = {\n//     isCartOpen,\n//     setIsCartOpen,\n//     addItemToCart,\n//     removeItemToCart,\n//     clearItemFromCart,\n//     cartItems,\n//     cartCount,\n//     cartTotal,\n//   };\n\n//   return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n// };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}